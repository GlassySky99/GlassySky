//Руководство автобусного предприятия в Екатеринбурге обеспокоено тем, что пассажиры не любят оплачивать свой проезд, покупая билет в автобусе. Чтобы решить эту проблему, позвали консультанта из Уральского университета. Этот консультант сказал, что он сам не покупает билеты в автобусе, потому что они редко оказываются счастливыми (билет называется счастливым, если в его номере сумма первой половины цифр равняется сумме второй половины цифр). Руководство задумалось, сколько билетов с номером длины N являются счастливыми. При N = 2 получается только 10 счастливых билетов (с номерами 00, 11, 22, 33, 44, 55, 66, 77, 88, 99). При N = 4 счастливых билетов уже 670. А сколько счастливых билетов для других значений N?
//Помогите автобусному предприятию. Напишите программу, которая посчитает количество счастливых билетов, номер которых состоит из N цифр.
//Исходные данные
//В единственной строке записано чётное число N — количество цифр в номере билета (2 ≤ N ≤ 8).
//Результат
//Выведите количество билетов, в номере которых сумма первой половины цифр равняется сумме второй половины цифр.
package timus;

import java.util.Scanner;

public class task_1044
{
    public static void main(String[] args)
    {
        Scanner in = new Scanner(System.in);
        int numbers = in.nextInt()/2;
        int[][] Array = new int [numbers + 1][numbers*9+1];
        for (int d = 0; d <= numbers; d++)
        {
            Array[d][0] = 1;
        }
        for (int j = 1; j <= numbers; j++)
        {
            for (int i = 1; i <= numbers*9; i++)
            {
                Array[j][i] = 0;
                for (int z = 0; (z <= 9) && ((i - z) >= 0); z++)
                {
                    Array[j][i] += Array[j - 1][i - z];
                }
            }
        }
        int x = 0;
        for (int y = 0; y <= numbers*9; y++)
        {
            x += Array[numbers][y]*Array[numbers][y];
        }
        System.out.println(x);

    }
}
